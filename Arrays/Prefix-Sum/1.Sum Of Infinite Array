[Problem Link] {https://www.codingninjas.com/codestudio/guided-paths/data-structures-algorithms/content/118820/offering/1381865}

def sumInRanges(arr, n, queries, q): #todo bruteforce better and simple
    lrarr = []
    for query in queries:
        l = query[0]-1
        r = query[1]
        s = 0
        for i in range(l,r):
            s += arr[i % n]
        lrarr.append(s)
    return lrarr
    
    
    #todo better tc improved code O(n) using prefixsum
    
    def sumrange(n,arr,quires,q):
    mod = 10**9+7
    prefixSum = [0 for _ in range(n+1)]
    ans = []
    for i in range(1,n+1):
        prefixSum[i] = (prefixSum[i-1]+arr[i-1]) % mod

    for quiery in quires:
        l = quiery[0]
        r = quiery[1]

        rsum = func(prefixSum, r, n)
        lsum = func(prefixSum, l-1, n)
        ans.append((rsum-lsum)%mod)
    return ans

a = [1,2,3]
n = 3
q = [[1,3],[1,5]]
nq = 2
print(sumrange(n,a,q,nq))
    
